#BlueJ class context
comment0.target=ArrayFrog
comment0.text=\n\ Manages\ a\ partial\ array\ of\ class\ Frog.\ The\ number\ of\ frogs\n\ in\ the\ array\ needs\ to\ be\ kept\ correct\ at\ all\ times.\n\n\ Step\ 2\:\ Enter\ your\ name\ for\ @author\ and\ the\ password\ for\ @version\n\ @author\ \ Froilan\ Zarate\n\ @version\ SampleFinalExam\n
comment1.params=array\ count
comment1.target=ArrayFrog(Frog[],\ int)
comment1.text=\n\ Constructs\ an\ ArrayFrog\ object\ with\ an\ array\ of\n\ Frog\ and\ the\ number\ of\ frogs\ in\ the\ array.\n\ \n\ @param\ array\ the\ array\ of\ class\ Frog\ to\ be\ managed\n\ @param\ count\ the\ number\ of\ frogs\ in\ the\ array\n
comment2.params=length
comment2.target=ArrayFrog(int)
comment2.text=\n\ Constructs\ an\ ArrayFrog\ object\ by\ creating\ an\n\ empty\ array\ of\ Frog\ and\ setting\ the\ number\ of\ \n\ frogs\ to\ zero.\n\ \n\ @param\ length\ the\ length\ of\ the\ array\n
comment3.params=frog
comment3.target=void\ add(Frog)
comment3.text=\n\ Adds\ a\ frog\ at\ the\ end\ of\ the\ array\ if\ the\ array\n\ is\ not\ full\ and\ does\ nothing\ otherwise.\n\n\ @param\ frog\ the\ frog\ to\ be\ added\n
comment4.params=index\ frog
comment4.target=void\ add(int,\ Frog)
comment4.text=\n\ Inserts\ the\ specified\ frog\ at\ the\ specified\ index\n\ position\ in\ the\ array\ and\ shifts\ the\ element\ currently\ \n\ at\ that\ position\ and\ any\ subsequent\ elements\ (if\ any)\ \n\ to\ the\ right\ (adds\ one\ to\ their\ indices)\ if\ the\ array\ \n\ is\ not\ full\ and\ the\ index\ is\ valid.\n\ The\ method\ does\ nothing\ otherwise.\n\ \n\ @param\ index\ the\ position\ to\ insert\ the\ frog\n\ @param\ frog\ the\ frog\ to\ insert\n
comment5.params=index
comment5.target=Frog\ delete(int)
comment5.text=\n\ Deletes\ and\ returns\ the\ frog\ at\ the\ specified\ position\ \n\ if\ the\ specified\ index\ is\ valid.\ It\ also\ shifts\ the\ \n\ element\ at\ the\ position\ and\ all\ subsequent\ elements\ \n\ (if\ any)\ to\ the\ left\ to\ maintain\ the\ element\ order.\n\ The\ method\ does\ nothing\ otherwise.\n\ \n\ @param\ index\ the\ index\ of\ the\ frog\ to\ be\ deleted\ \n\ \ \ \ \ \ \ \ from\ the\ array\n\ @return\ the\ frog\ deleted\ from\ the\ array\ if\ index\ is\ valid\n\ \ \ \ \ \ \ \ \ null\ otherwise\n
comment6.params=
comment6.target=java.lang.String\ toString()
comment6.text=\n\ Gets\ a\ string\ representation\ for\ the\ array.\n\ \n\ No\ if\ statements\ inside\ the\ loop.\n\ \n\ @return\ a\ String\ containing\ all\ frogs\ in\ the\ array\ \n\ \ \ \ \ \ \ \ \ in\ the\ format\ \n\ \ \ \ \ \ \ \ \ [Frog[...],\ Frog[...],\ ...,\ Frog[...]]\n\ \ \ \ \ \ \ \ \ where\ each\ Frog[...]\ is\ the\ string\ returned\n\ \ \ \ \ \ \ \ \ from\ method\ toString\ on\ a\ frog\ in\ the\ array\n
comment7.params=
comment7.target=void\ sort()
comment7.text=\n\ Calls\ a\ static\ method\ to\ sort\ the\ array.\n
numComments=8
